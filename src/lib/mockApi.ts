import type { APIListResponse, RecordData, TabSchema } from '@/types'
type DB={schemas:Record<string,TabSchema>,rows:Record<string,RecordData[]>}
const db:DB={schemas:{},rows:{}}
let _id=1; const next=()=>_id++
function add(tab:string,cols:any[]){db.schemas[tab]={tab,columns:cols};db.rows[tab]=db.rows[tab]||[]}

add('Tech Society',[{column:'id',type:'Auto'},{column:'society_name',type:'Text'},{column:'designation_person',type:'Text'},{column:'phone',type:'Phone'},{column:'email',type:'Email'},{column:'techfest_or_fest',type:'Text'},{column:'tentative_months',type:'Enum',enum_values:['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec']},{column:'_by',type:'Auto'},{column:'_ts',type:'Auto'}]);
add('Student Community',[{column:'id',type:'Auto'},{column:'name',type:'Text'},{column:'notes',type:'LongText'},{column:'email',type:'Email'},{column:'phone_primary',type:'Phone'},{column:'phone_secondary',type:'Phone'},{column:'approx_strength',type:'Integer'},{column:'_by',type:'Auto'},{column:'_ts',type:'Auto'}]);
add('EdTech Websites',[{column:'id',type:'Auto'},{column:'website_url',type:'URL'},{column:'_by',type:'Auto'},{column:'_ts',type:'Auto'}]);
add('Cold Calling',[{column:'id',type:'Auto'},{column:'date',type:'Date'},{column:'deadline',type:'Date'},{column:'name',type:'Text'},{column:'email',type:'Email'},{column:'phone',type:'Phone'},{column:'org',type:'Text'},{column:'intern',type:'User'},{column:'update',type:'LongText'},{column:'done',type:'Checkbox'},{column:'createdBy',type:'Text'},{column:'createdAt',type:'DateTime'},{column:'updatedBy',type:'Text'},{column:'updatedAt',type:'DateTime'}]);
add('content_calendar',[{column:'id',type:'Auto'},{column:'title',type:'Text'},{column:'channel',type:'Enum',enum_values:['Instagram','LinkedIn','X','YouTube','Blog','WhatsApp','Email']},{column:'owner',type:'User'},{column:'planned_date',type:'Date'},{column:'status',type:'Enum',enum_values:['Idea','Draft','In Review','Scheduled','Posted','Paused']},{column:'asset_links',type:'URL'},{column:'notes',type:'LongText'},{column:'_by',type:'Auto'},{column:'_ts',type:'Auto'}]);
add('tasks',[{column:'id',type:'Auto'},{column:'task',type:'Text'},{column:'assignee',type:'User'},{column:'role',type:'Enum',enum_values:['Content','Outreach','Design','Ops']},{column:'priority',type:'Enum',enum_values:['P0','P1','P2']},{column:'due_date',type:'Date'},{column:'status',type:'Enum',enum_values:['Backlog','In-Progress','Waiting','Review','Done']},{column:'brief_url',type:'URL'},{column:'assets_url',type:'URL'},{column:'notes',type:'LongText'},{column:'_by',type:'Auto'},{column:'_ts',type:'Auto'}]);
add('attendance',[{column:'id',type:'Auto'},{column:'name',type:'User'},{column:'action',type:'Enum',enum_values:['Check-in','Check-out']},{column:'notes',type:'Text'},{column:'session_id',type:'Text'},{column:'_by',type:'Auto'},{column:'_ts',type:'Auto'}]);
add('attendance_summary',[{column:'date',type:'Date'},{column:'name',type:'User'},{column:'first_check_in',type:'Text'},{column:'last_check_out',type:'Text'},{column:'total_minutes',type:'Integer'}]);
add('campaigns',[{column:'id',type:'Auto'},{column:'campaign_name',type:'Text'},{column:'objective',type:'Enum',enum_values:['Awareness','Leads','Installs','Engagement']},{column:'budget',type:'Currency'},{column:'start_date',type:'Date'},{column:'end_date',type:'Date'},{column:'platforms',type:'MultiSelect'},{column:'status',type:'Enum',enum_values:['Planned','Live','Paused','Completed','Cancelled']},{column:'creative_notes',type:'LongText'},{column:'assets_folder',type:'URL'},{column:'approvals',type:'Enum',enum_values:['Pending','Approved','Revisions']},{column:'_by',type:'Auto'},{column:'_ts',type:'Auto'}]);
add('info_needed',[{column:'id',type:'Auto'},{column:'requestor',type:'User'},{column:'topic',type:'Text'},{column:'details',type:'LongText'},{column:'deadline',type:'Date'},{column:'links',type:'URL'},{column:'status',type:'Enum',enum_values:['Requested','In Progress','Provided','Blocked']},{column:'provided_on',type:'Date'},{column:'_by',type:'Auto'},{column:'_ts',type:'Auto'}]);
add('social_media',[{column:'id',type:'Auto'},{column:'platform',type:'Enum',enum_values:['Instagram','LinkedIn','X','YouTube','Blog','WhatsApp','Email']},{column:'post_type',type:'Enum',enum_values:['Static','Carousel','Reel','Story','Short','Blog']},{column:'caption',type:'LongText'},{column:'hashtags',type:'Text'},{column:'song',type:'Text'},{column:'media_url',type:'URL'},{column:'scheduled_at',type:'DateTime'},{column:'owner',type:'User'},{column:'status',type:'Enum',enum_values:['Draft','Scheduled','Posted','Failed']},{column:'_by',type:'Auto'},{column:'_ts',type:'Auto'}]);
add('interns_hiring',[{column:'id',type:'Auto'},{column:'name',type:'Text'},{column:'email',type:'Email'},{column:'phone',type:'Phone'},{column:'portfolio_url',type:'URL'},{column:'role_applied',type:'Text'},{column:'status',type:'Enum',enum_values:['New','Shortlisted','Interview','Selected','Rejected']},{column:'notes',type:'LongText'},{column:'_by',type:'Auto'},{column:'_ts',type:'Auto'}]);
add('expenses',[{column:'id',type:'Auto'},{column:'requester',type:'User'},{column:'purpose',type:'Text'},{column:'amount',type:'Currency'},{column:'needed_by',type:'Date'},{column:'status',type:'Enum',enum_values:['Requested','Approved','Reimbursed','Rejected']},{column:'pay_mode',type:'Enum',enum_values:['UPI','Card','Cash','Transfer']},{column:'notes',type:'LongText'},{column:'link',type:'URL'},{column:'_by',type:'Auto'},{column:'_ts',type:'Auto'}]);
add('inbox',[{column:'id',type:'Auto'},{column:'from',type:'User'},{column:'to',type:'User'},{column:'task',type:'Text'},{column:'due_date',type:'Date'},{column:'link_to_record',type:'URL'},{column:'status',type:'Enum',enum_values:['New','Seen','Converted to Task']},{column:'_by',type:'Auto'},{column:'_ts',type:'Auto'}]);
add('pipelines',[{column:'id',type:'Auto'},{column:'name',type:'Text'},{column:'stage',type:'Enum',enum_values:['Lead','Qualified','Proposal','Negotiation','Won','Lost']},{column:'owner',type:'User'},{column:'value',type:'Currency'},{column:'probability',type:'Integer'},{column:'next_step',type:'Text'},{column:'due_date',type:'Date'},{column:'notes',type:'LongText'},{column:'_by',type:'Auto'},{column:'_ts',type:'Auto'}]);
add('calendar',[{column:'id',type:'Auto'},{column:'title',type:'Text'},{column:'type',type:'Enum',enum_values:['Content','Campaign','Meeting','Outreach','Other']},{column:'date',type:'Date'},{column:'start_time',type:'Text'},{column:'end_time',type:'Text'},{column:'assigned_to',type:'User'},{column:'link',type:'URL'},{column:'notes',type:'LongText'},{column:'_by',type:'Auto'},{column:'_ts',type:'Auto'}]);
add('people',[{column:'name',type:'Text'},{column:'role',type:'Text'},{column:'email',type:'Email'},{column:'phone',type:'Phone'},{column:'manager',type:'Text'},{column:'status',type:'Enum',enum_values:['Active','On-leave']}]);
add('approvals',[{column:'request_id',type:'Text'},{column:'area',type:'Text'},{column:'title',type:'Text'},{column:'owner',type:'User'},{column:'status',type:'Enum',enum_values:['Pending','Approved','Revisions','Rejected']},{column:'approver',type:'User'},{column:'decision_at',type:'DateTime'},{column:'comment',type:'LongText'}]);

export const mockApi={
  async tabs(){return Object.keys(db.schemas)},
  async schema(tab?:string){if(tab)return db.schemas[tab]||null;return Object.values(db.schemas) as any},
  async list(tab:string){return {rows:db.rows[tab]||[],schema:db.schemas[tab]}},
  async create(tab:string,data:RecordData){const row={...data};const cols=db.schemas[tab].columns.map(c=>c.column);if(cols.includes('id')&&!row.id)row.id=next();if(cols.includes('_ts')&&!row._ts)row._ts=new Date().toISOString();db.rows[tab]=db.rows[tab]||[];db.rows[tab].push(row);return {ok:true,id:row.id}},
  async update(tab:string,id:string,data:RecordData){const rows=db.rows[tab]||[];const i=rows.findIndex(r=>String(r.id)===String(id));if(i>=0)rows[i]={...rows[i],...data};return {ok:true}},
  async remove(tab:string,id:string){db.rows[tab]=(db.rows[tab]||[]).filter(r=>String(r.id)!==String(id));return {ok:true}},
  async addTab(payload:any){db.schemas[payload.tab]={tab:payload.tab,columns:payload.columns};db.rows[payload.tab]=[];return {ok:true}}
}
